#!/usr/bin/env python

import sys
import os
import re
import fnmatch
import subprocess

from argparse import ArgumentParser

parser = ArgumentParser(description = 'Detox')
parser.add_argument('--policy', '-p', metavar = 'FILE', dest = 'policy', required = True, help = 'Policy files.')
parser.add_argument('--config', '-c', metavar = 'CONFIG', dest = 'config', required = True, help = 'Configuration JSON.')
parser.add_argument('--comment', '-m', metavar = 'COMMENT', dest = 'comment', help = 'Comment to be sent to deletion interface as well as the local deletion record.')
parser.add_argument('--snapshot-run', '-N', action = 'store_true', dest = 'snapshot_run', help = 'Do not make any actual deletion requests or changes to inventory. Create no cycle, but save the results in the snapshot cache.')
parser.add_argument('--test-run', '-T', action = 'store_true', dest = 'test_run', help = 'Do not make any actual deletion requests or changes to inventory. Create a new cycle.')

args = parser.parse_args()
sys.argv = []

if args.snapshot_run and args.test_run:
    sys.stderr.write('--snapshot-run and --test-run cannot be set at the same time.')
    sys.exit(1)

## Load the configuration
from dynamo.dataformat.configuration import Configuration

config = Configuration(args.config)

## Set up logging (write to stdout)
from dynamo.core.executable import make_standard_logger, read_only

LOG = make_standard_logger(config.log_level)

## Configure the Detox object
from dynamo.detox.main import Detox
from dynamo.operation.impl.mysqlapplock import MySQLApplicationLockInterface

LOG.info('Starting Detox.')

os.environ['DYNAMO_BASE'] + '/etc/policies.tag'
proc = subprocess.Popen(['git', 'tag', '-l', '--contains', 'HEAD'], cwd = os.environ['DYNAMO_POLICIES'], stdout = subprocess.PIPE, stderr = subprocess.PIPE)
policy_version = proc.communicate()[0].strip()
if not policy_version:
    policy_version = 'unknown'

config.detox.policy_file = args.policy
config.detox.policy_version = policy_version

config.detox.test_run = (args.snapshot_run or args.test_run)

## Run the main program
from dynamo.core.executable import inventory, authorizer

lock = MySQLApplicationLockInterface(config.applock, authorizer)

with lock:
    detox = Detox(config.detox)

    if read_only:
        detox.deletion_op.dry_run = True
        detox.copy_op.dry_run = True
        detox.history.read_only = True
        detox.detoxhistory.read_only = True

    detox.run(inventory, comment = args.comment, create_cycle = not args.snapshot_run)

## If test run, don't send back the inventory updates
if args.snapshot_run or args.test_run:
    inventory.clear_update()
