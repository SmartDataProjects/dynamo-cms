#!/usr/bin/env python

import sys
from argparse import ArgumentParser

parser = ArgumentParser(description = 'Update dataset popularity.')
parser.add_argument('--config', '-c', metavar = 'CONFIG', dest = 'config', help = 'Configuration JSON.')
parser.add_argument('--crabaccess', '-A', action = 'store_true', dest = 'crabaccess', help = 'Update CRAB access.')
parser.add_argument('--globalqueue', '-G', action = 'store_true', dest = 'globalqueue', help = 'Update GlobalQueue request.')

args = parser.parse_args()
sys.argv = []

# If no options given, update both
if not args.crabaccess and not args.globalqueue:
    args.crabaccess = True
    args.globalqueue = True

## Load the configuration
from dynamo.dataformat import Configuration

config = Configuration(args.config)

## Set up logging (write to stdout)
from dynamo.core.executable import authorized, make_standard_logger

LOG = make_standard_logger(config.get('log_level', 'info'))

## Load the inventory
from dynamo.core.executable import inventory

if args.crabaccess:
    ## Update: CRABAccessHistory
    
    LOG.info('Updating CRABAccessHistory.')
    
    from dynamo.policy.producers.crabaccess import CRABAccessHistory

    access_config = config.get('crabaccess', Configuration())
    if 'included_sites' in config:
        access_config = config.included_sites
    if 'excluded_sites' in config:
        access_config = config.excluded_sites

    access = CRABAccessHistory(access_config)

    if not authorized:
        access.set_read_only()
    
    access.update(inventory)
    
    LOG.info('CRABAccessHistory update completed.')

if args.globalqueue:
    ## Update: GlobalQueueRequestHistory
    
    LOG.info('Updating GlobalQueueRequestHistory.')
    
    from dynamo.policy.producers.globalqueue import GlobalQueueRequestHistory

    request = GlobalQueueRequestHistory(config.get('globalqueue', None))

    if not authorized:
        request.set_read_only()
    
    request.update(inventory)
    
    LOG.info('GlobalQueueRequestHistory update completed.')
