#!/usr/bin/env python

import sys
import os
import logging
import time
import re
import fnmatch
import pprint

from argparse import ArgumentParser

parser = ArgumentParser(description = 'Import list of users from SiteDB')

args = parser.parse_args()
sys.argv = []

try:
    debug = (os.environ['DYNAMO_SERVER_DEBUG'] == '1')
except:
    debug = False

if not debug:
    if os.geteuid() != 0:
        sys.stderr.write('Root privilege required\n')
        sys.exit(1)

## Read server config (should be readable only to root)

from dynamo.dataformat import Configuration

try:
    config_path = os.environ['DYNAMO_SERVER_CONFIG']
except KeyError:
    config_path = '/etc/dynamo/server_config.json'

config = Configuration(config_path)

## Create a handle to the master server

from dynamo.core.components.master import MasterServer

master_config = config.manager.master
master_server = MasterServer.get_instance(master_config.module, master_config.config)

## Create a handle to SiteDB

from dynamo.source.impl.sitedbuserinfo import SiteDBUserInfoSource

sitedb_config = config.applications.defaults['utils.interface.sitedb:SiteDB']['all']
sitedb = SiteDBUserInfoSource(Configuration({'sitedb': sitedb_config}))

## Compare and register

known_users = dict((name, (email, dn)) for name, dn, email in master_server.list_users())
updated_users = []

sitedb_users = sitedb.get_user_list()

for name, email, dn in sitedb_users.itervalues():
    try:
        known_user = known_users.pop(name)
    except KeyError:
        master_server.add_user(name, dn, email)
    else:
        if known_user != (email, dn):
            master_server.update_user(name, dn, email)

for name in known_users.iterkeys():
    master_server.delete_user(name)
